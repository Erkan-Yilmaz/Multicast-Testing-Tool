/*
 * MainFrame.java
 *
 * Created on Mar 3, 2011, 4:57:17 PM
 */

package com.spam.mctool.view.main;

import com.spam.mctool.intermediates.ReceiverAddedOrRemovedEvent;
import com.spam.mctool.intermediates.ReceiverDataChangedEvent;
import com.spam.mctool.intermediates.SenderAddedOrRemovedEvent;
import com.spam.mctool.intermediates.SenderDataChangedEvent;
import com.spam.mctool.model.Sender;
import com.spam.mctool.view.GraphicalView;
import com.spam.mctool.view.dialogs.EditReceiverDialog;
import com.spam.mctool.view.dialogs.EditSenderDialog;
import com.spam.mctool.view.main.receivertable.ReceiverTableModel;
import java.util.Map;

/**
 *
 * @author Tobias St√∂ckel (Tobias.Stoeckel@de.ibm.com)
 */
public class MainFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private GraphicalView view;

    /** Creates new form MainFrame */
    public MainFrame() {
        this(null);
    }

    public MainFrame(GraphicalView view) {
        this.view = view;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusRenderer1 = new com.spam.mctool.view.main.StatusRenderer();
        twoColorRenderer1 = new com.spam.mctool.view.main.TwoColorRenderer();
        mainSplitPane = new javax.swing.JSplitPane();
        senderSplitPane = new javax.swing.JSplitPane();
        paSendingStatistics = new javax.swing.JPanel();
        laSendingStatistics = new javax.swing.JLabel();
        laSentCaption = new javax.swing.JLabel();
        laSenderRateCaption = new javax.swing.JLabel();
        sendingStatisticsSeparator = new javax.swing.JSeparator();
        laSent = new javax.swing.JLabel();
        laSenderRate = new javax.swing.JLabel();
        paSenderTableOuter = new javax.swing.JPanel();
        paSenderButtons = new javax.swing.JPanel();
        buActivateSender = new javax.swing.JButton();
        buDeactivateSender = new javax.swing.JButton();
        buAddSender = new javax.swing.JButton();
        buShowSender = new javax.swing.JButton();
        buEditSender = new javax.swing.JButton();
        buDeleteSender = new javax.swing.JButton();
        paSenderTableInner = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        senderTable = new com.spam.mctool.view.main.sendertable.JSenderTable();
        paSenderTableCaption = new javax.swing.JPanel();
        laSenderTableCaption = new javax.swing.JLabel();
        senderTableIcon = new javax.swing.JLabel();
        receiverSplitPane = new javax.swing.JSplitPane();
        paReceivingStatistics = new javax.swing.JPanel();
        laReceivingStatisticsCaption = new javax.swing.JLabel();
        laReceivedCaption = new javax.swing.JLabel();
        laReceivingRateCaption = new javax.swing.JLabel();
        laLostPacketsCaption = new javax.swing.JLabel();
        laFaultyPacketsCaption = new javax.swing.JLabel();
        receivingStatisticsSeparator = new javax.swing.JSeparator();
        laReceived = new javax.swing.JLabel();
        laReceivingRate = new javax.swing.JLabel();
        laLostPackets = new javax.swing.JLabel();
        laFaultyPackets = new javax.swing.JLabel();
        paReceiverTableOuter = new javax.swing.JPanel();
        paReceiverButtons = new javax.swing.JPanel();
        buActivateReceiver = new javax.swing.JButton();
        buDeactivateReceiver = new javax.swing.JButton();
        buAddReceiver = new javax.swing.JButton();
        buShowReceiver = new javax.swing.JButton();
        buEditReceiver = new javax.swing.JButton();
        buDeleteReceiver = new javax.swing.JButton();
        paReceiverTableInner = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receiverTable = new com.spam.mctool.view.main.receivertable.JReceiverTable();
        paReceiverTableCaption = new javax.swing.JPanel();
        laReceiverTableCaption = new javax.swing.JLabel();
        laReceiverTableIcon = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem24 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/spam/mctool/view/Bundle"); // NOI18N
        setTitle(bundle.getString("MainFrame.title")); // NOI18N

        mainSplitPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainSplitPane.setDividerLocation(267);
        mainSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        mainSplitPane.setResizeWeight(0.5);
        mainSplitPane.setOneTouchExpandable(true);

        senderSplitPane.setBorder(null);
        senderSplitPane.setDividerLocation(590);
        senderSplitPane.setResizeWeight(1.0);
        senderSplitPane.setOneTouchExpandable(true);

        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("com/spam/mctool/view/main/Bundle"); // NOI18N
        laSendingStatistics.setText(bundle1.getString("MainFrame.laSendingStatistics.text")); // NOI18N

        laSentCaption.setText(bundle1.getString("MainFrame.laSentCaption.text")); // NOI18N

        laSenderRateCaption.setText(bundle1.getString("MainFrame.laSenderRateCaption.text")); // NOI18N

        laSent.setText(bundle1.getString("MainFrame.laSent.text")); // NOI18N

        laSenderRate.setText(bundle1.getString("MainFrame.laSenderRate.text")); // NOI18N

        javax.swing.GroupLayout paSendingStatisticsLayout = new javax.swing.GroupLayout(paSendingStatistics);
        paSendingStatistics.setLayout(paSendingStatisticsLayout);
        paSendingStatisticsLayout.setHorizontalGroup(
            paSendingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paSendingStatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paSendingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sendingStatisticsSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(laSendingStatistics)
                    .addGroup(paSendingStatisticsLayout.createSequentialGroup()
                        .addComponent(laSentCaption)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(laSent))
                    .addGroup(paSendingStatisticsLayout.createSequentialGroup()
                        .addComponent(laSenderRateCaption)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(laSenderRate)))
                .addContainerGap())
        );
        paSendingStatisticsLayout.setVerticalGroup(
            paSendingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paSendingStatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(laSendingStatistics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendingStatisticsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paSendingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laSentCaption)
                    .addComponent(laSent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paSendingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laSenderRateCaption)
                    .addComponent(laSenderRate))
                .addContainerGap(184, Short.MAX_VALUE))
        );

        senderSplitPane.setRightComponent(paSendingStatistics);

        paSenderTableOuter.setLayout(new java.awt.BorderLayout());

        paSenderButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buActivateSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/play_green.png"))); // NOI18N
        buActivateSender.setText(bundle1.getString("MainFrame.buActivateSender.text")); // NOI18N
        buActivateSender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buActivateSenderActionPerformed(evt);
            }
        });
        paSenderButtons.add(buActivateSender);

        buDeactivateSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/stop_red.png"))); // NOI18N
        buDeactivateSender.setText(bundle1.getString("MainFrame.buDeactivateSender.text")); // NOI18N
        buDeactivateSender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buDeactivateSenderActionPerformed(evt);
            }
        });
        paSenderButtons.add(buDeactivateSender);

        buAddSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/add_green.png"))); // NOI18N
        buAddSender.setText(bundle1.getString("MainFrame.buAddSender.text")); // NOI18N
        buAddSender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAddSenderActionPerformed(evt);
            }
        });
        paSenderButtons.add(buAddSender);

        buShowSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/preview.png"))); // NOI18N
        buShowSender.setText(bundle1.getString("MainFrame.buShowSender.text")); // NOI18N
        buShowSender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buShowSenderActionPerformed(evt);
            }
        });
        paSenderButtons.add(buShowSender);

        buEditSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/edit.png"))); // NOI18N
        buEditSender.setText(bundle1.getString("MainFrame.buEditSender.text")); // NOI18N
        paSenderButtons.add(buEditSender);

        buDeleteSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/delete.png"))); // NOI18N
        buDeleteSender.setText(bundle1.getString("MainFrame.buDeleteSender.text")); // NOI18N
        paSenderButtons.add(buDeleteSender);

        paSenderTableOuter.add(paSenderButtons, java.awt.BorderLayout.SOUTH);

        paSenderTableInner.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setViewportView(senderTable);

        paSenderTableInner.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        paSenderTableOuter.add(paSenderTableInner, java.awt.BorderLayout.CENTER);

        paSenderTableCaption.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        laSenderTableCaption.setText(bundle1.getString("MainFrame.laSenderTableCaption.text")); // NOI18N
        paSenderTableCaption.add(laSenderTableCaption);

        senderTableIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/sender.png"))); // NOI18N
        senderTableIcon.setText(bundle1.getString("MainFrame.senderTableIcon.text")); // NOI18N
        paSenderTableCaption.add(senderTableIcon);

        paSenderTableOuter.add(paSenderTableCaption, java.awt.BorderLayout.NORTH);

        senderSplitPane.setLeftComponent(paSenderTableOuter);

        mainSplitPane.setTopComponent(senderSplitPane);

        receiverSplitPane.setBorder(null);
        receiverSplitPane.setDividerLocation(590);
        receiverSplitPane.setResizeWeight(1.0);
        receiverSplitPane.setOneTouchExpandable(true);

        laReceivingStatisticsCaption.setText(bundle1.getString("MainFrame.laReceivingStatisticsCaption.text")); // NOI18N

        laReceivedCaption.setText(bundle1.getString("MainFrame.laReceivedCaption.text")); // NOI18N

        laReceivingRateCaption.setText(bundle1.getString("MainFrame.laReceivingRateCaption.text")); // NOI18N

        laLostPacketsCaption.setText(bundle1.getString("MainFrame.laLostPacketsCaption.text")); // NOI18N

        laFaultyPacketsCaption.setText(bundle1.getString("MainFrame.laFaultyPacketsCaption.text")); // NOI18N

        laReceived.setText(bundle1.getString("MainFrame.laReceived.text")); // NOI18N

        laReceivingRate.setText(bundle1.getString("MainFrame.laReceivingRate.text")); // NOI18N

        laLostPackets.setText(bundle1.getString("MainFrame.laLostPackets.text")); // NOI18N

        laFaultyPackets.setText(bundle1.getString("MainFrame.laFaultyPackets.text")); // NOI18N

        javax.swing.GroupLayout paReceivingStatisticsLayout = new javax.swing.GroupLayout(paReceivingStatistics);
        paReceivingStatistics.setLayout(paReceivingStatisticsLayout);
        paReceivingStatisticsLayout.setHorizontalGroup(
            paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paReceivingStatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(laReceivingStatisticsCaption)
                    .addComponent(receivingStatisticsSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addGroup(paReceivingStatisticsLayout.createSequentialGroup()
                        .addComponent(laReceivedCaption)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(laReceived))
                    .addGroup(paReceivingStatisticsLayout.createSequentialGroup()
                        .addComponent(laReceivingRateCaption)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(laReceivingRate))
                    .addGroup(paReceivingStatisticsLayout.createSequentialGroup()
                        .addComponent(laLostPacketsCaption)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(laLostPackets))
                    .addGroup(paReceivingStatisticsLayout.createSequentialGroup()
                        .addComponent(laFaultyPacketsCaption)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(laFaultyPackets)))
                .addContainerGap())
        );
        paReceivingStatisticsLayout.setVerticalGroup(
            paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paReceivingStatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(laReceivingStatisticsCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivingStatisticsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laReceivedCaption)
                    .addComponent(laReceived))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laReceivingRateCaption)
                    .addComponent(laReceivingRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laLostPacketsCaption)
                    .addComponent(laLostPackets))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paReceivingStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laFaultyPacketsCaption)
                    .addComponent(laFaultyPackets))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        receiverSplitPane.setRightComponent(paReceivingStatistics);

        paReceiverTableOuter.setLayout(new java.awt.BorderLayout());

        paReceiverButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buActivateReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/play_green.png"))); // NOI18N
        buActivateReceiver.setText(bundle1.getString("MainFrame.buActivateReceiver.text")); // NOI18N
        paReceiverButtons.add(buActivateReceiver);

        buDeactivateReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/stop_red.png"))); // NOI18N
        buDeactivateReceiver.setText(bundle1.getString("MainFrame.buDeactivateReceiver.text")); // NOI18N
        paReceiverButtons.add(buDeactivateReceiver);

        buAddReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/add_green.png"))); // NOI18N
        buAddReceiver.setText(bundle1.getString("MainFrame.buAddReceiver.text")); // NOI18N
        buAddReceiver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAddReceiverActionPerformed(evt);
            }
        });
        paReceiverButtons.add(buAddReceiver);

        buShowReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/preview.png"))); // NOI18N
        buShowReceiver.setText(bundle1.getString("MainFrame.buShowReceiver.text")); // NOI18N
        paReceiverButtons.add(buShowReceiver);

        buEditReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/edit.png"))); // NOI18N
        buEditReceiver.setText(bundle1.getString("MainFrame.buEditReceiver.text")); // NOI18N
        paReceiverButtons.add(buEditReceiver);

        buDeleteReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/delete.png"))); // NOI18N
        buDeleteReceiver.setText(bundle1.getString("MainFrame.buDeleteReceiver.text")); // NOI18N
        paReceiverButtons.add(buDeleteReceiver);

        paReceiverTableOuter.add(paReceiverButtons, java.awt.BorderLayout.PAGE_END);

        paReceiverTableInner.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(receiverTable);

        paReceiverTableInner.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        paReceiverTableOuter.add(paReceiverTableInner, java.awt.BorderLayout.CENTER);

        paReceiverTableCaption.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        laReceiverTableCaption.setText(bundle1.getString("MainFrame.laReceiverTableCaption.text")); // NOI18N
        paReceiverTableCaption.add(laReceiverTableCaption);

        laReceiverTableIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/spam/mctool/view/images/receiver.png"))); // NOI18N
        laReceiverTableIcon.setText(bundle1.getString("MainFrame.laReceiverTableIcon.text")); // NOI18N
        paReceiverTableCaption.add(laReceiverTableIcon);

        paReceiverTableOuter.add(paReceiverTableCaption, java.awt.BorderLayout.NORTH);

        receiverSplitPane.setLeftComponent(paReceiverTableOuter);

        mainSplitPane.setRightComponent(receiverSplitPane);

        jMenu1.setText(bundle1.getString("MainFrame.jMenu1.text")); // NOI18N

        jMenuItem3.setText(bundle1.getString("MainFrame.jMenuItem3.text")); // NOI18N
        jMenu1.add(jMenuItem3);

        jMenuItem5.setText(bundle1.getString("MainFrame.jMenuItem5.text")); // NOI18N
        jMenu1.add(jMenuItem5);

        jMenuItem4.setText(bundle1.getString("MainFrame.jMenuItem4.text")); // NOI18N
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator1);

        jMenuItem6.setText(bundle1.getString("MainFrame.jMenuItem6.text")); // NOI18N
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator2);

        jMenuItem1.setText(bundle1.getString("MainFrame.jMenuItem1.text")); // NOI18N
        jMenu1.add(jMenuItem1);

        menuBar.add(jMenu1);

        jMenu3.setText(bundle1.getString("MainFrame.jMenu3.text")); // NOI18N

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText(bundle1.getString("MainFrame.jCheckBoxMenuItem1.text")); // NOI18N
        jMenu3.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText(bundle1.getString("MainFrame.jCheckBoxMenuItem2.text")); // NOI18N
        jMenu3.add(jCheckBoxMenuItem2);
        jMenu3.add(jSeparator3);

        jMenuItem8.setText(bundle1.getString("MainFrame.jMenuItem8.text")); // NOI18N
        jMenu3.add(jMenuItem8);

        jMenuItem7.setText(bundle1.getString("MainFrame.jMenuItem7.text")); // NOI18N
        jMenu3.add(jMenuItem7);
        jMenu3.add(jSeparator9);

        jMenuItem27.setText(bundle1.getString("MainFrame.jMenuItem27.text")); // NOI18N
        jMenu3.add(jMenuItem27);

        jMenuItem17.setText(bundle1.getString("MainFrame.jMenuItem17.text")); // NOI18N
        jMenu3.add(jMenuItem17);

        jMenuItem9.setText(bundle1.getString("MainFrame.jMenuItem9.text")); // NOI18N
        jMenu3.add(jMenuItem9);

        jMenuItem14.setText(bundle1.getString("MainFrame.jMenuItem14.text")); // NOI18N
        jMenu3.add(jMenuItem14);
        jMenu3.add(jSeparator4);

        jMenuItem10.setText(bundle1.getString("MainFrame.jMenuItem10.text")); // NOI18N
        jMenu3.add(jMenuItem10);
        jMenu3.add(jSeparator5);

        jMenuItem11.setText(bundle1.getString("MainFrame.jMenuItem11.text")); // NOI18N
        jMenu3.add(jMenuItem11);

        jMenuItem12.setText(bundle1.getString("MainFrame.jMenuItem12.text")); // NOI18N
        jMenu3.add(jMenuItem12);

        jMenuItem13.setText(bundle1.getString("MainFrame.jMenuItem13.text")); // NOI18N
        jMenu3.add(jMenuItem13);

        menuBar.add(jMenu3);

        jMenu4.setText(bundle1.getString("MainFrame.jMenu4.text")); // NOI18N

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText(bundle1.getString("MainFrame.jCheckBoxMenuItem3.text")); // NOI18N
        jMenu4.add(jCheckBoxMenuItem3);

        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem4.setText(bundle1.getString("MainFrame.jCheckBoxMenuItem4.text")); // NOI18N
        jMenu4.add(jCheckBoxMenuItem4);
        jMenu4.add(jSeparator6);

        jMenuItem16.setText(bundle1.getString("MainFrame.jMenuItem16.text")); // NOI18N
        jMenu4.add(jMenuItem16);

        jMenuItem19.setText(bundle1.getString("MainFrame.jMenuItem19.text")); // NOI18N
        jMenu4.add(jMenuItem19);
        jMenu4.add(jSeparator10);

        jMenuItem26.setText(bundle1.getString("MainFrame.jMenuItem26.text")); // NOI18N
        jMenu4.add(jMenuItem26);

        jMenuItem25.setText(bundle1.getString("MainFrame.jMenuItem25.text")); // NOI18N
        jMenu4.add(jMenuItem25);

        jMenuItem20.setText(bundle1.getString("MainFrame.jMenuItem20.text")); // NOI18N
        jMenu4.add(jMenuItem20);

        jMenuItem23.setText(bundle1.getString("MainFrame.jMenuItem23.text")); // NOI18N
        jMenu4.add(jMenuItem23);
        jMenu4.add(jSeparator7);

        jMenuItem24.setText(bundle1.getString("MainFrame.jMenuItem24.text")); // NOI18N
        jMenu4.add(jMenuItem24);
        jMenu4.add(jSeparator8);

        jMenuItem22.setText(bundle1.getString("MainFrame.jMenuItem22.text")); // NOI18N
        jMenu4.add(jMenuItem22);

        jMenuItem21.setText(bundle1.getString("MainFrame.jMenuItem21.text")); // NOI18N
        jMenu4.add(jMenuItem21);

        jMenuItem18.setText(bundle1.getString("MainFrame.jMenuItem18.text")); // NOI18N
        jMenu4.add(jMenuItem18);

        menuBar.add(jMenu4);

        jMenu2.setText(bundle1.getString("MainFrame.jMenu2.text")); // NOI18N

        jMenuItem2.setText(bundle1.getString("MainFrame.jMenuItem2.text")); // NOI18N
        jMenu2.add(jMenuItem2);

        jMenuItem15.setText(bundle1.getString("MainFrame.jMenuItem15.text")); // NOI18N
        jMenu2.add(jMenuItem15);

        menuBar.add(jMenu2);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buActivateSenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buActivateSenderActionPerformed
        for(Sender s : senderTable.getSelectedSenders()) {
            s.activate();
        }
    }//GEN-LAST:event_buActivateSenderActionPerformed

    private void buShowSenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buShowSenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buShowSenderActionPerformed

    private void buAddSenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAddSenderActionPerformed
        new EditSenderDialog(this, true).setVisible(true);
    }//GEN-LAST:event_buAddSenderActionPerformed

    private void buDeactivateSenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buDeactivateSenderActionPerformed
        for(Sender s : senderTable.getSelectedSenders()) {
            s.deactivate();
        }
    }//GEN-LAST:event_buDeactivateSenderActionPerformed

    private void buAddReceiverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAddReceiverActionPerformed
        new EditReceiverDialog(this, true).setVisible(true);
    }//GEN-LAST:event_buAddReceiverActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame frame = new MainFrame();
                frame.setVisible(true);
                frame.test();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buActivateReceiver;
    private javax.swing.JButton buActivateSender;
    private javax.swing.JButton buAddReceiver;
    private javax.swing.JButton buAddSender;
    private javax.swing.JButton buDeactivateReceiver;
    private javax.swing.JButton buDeactivateSender;
    private javax.swing.JButton buDeleteReceiver;
    private javax.swing.JButton buDeleteSender;
    private javax.swing.JButton buEditReceiver;
    private javax.swing.JButton buEditSender;
    private javax.swing.JButton buShowReceiver;
    private javax.swing.JButton buShowSender;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JLabel laFaultyPackets;
    private javax.swing.JLabel laFaultyPacketsCaption;
    private javax.swing.JLabel laLostPackets;
    private javax.swing.JLabel laLostPacketsCaption;
    private javax.swing.JLabel laReceived;
    private javax.swing.JLabel laReceivedCaption;
    private javax.swing.JLabel laReceiverTableCaption;
    private javax.swing.JLabel laReceiverTableIcon;
    private javax.swing.JLabel laReceivingRate;
    private javax.swing.JLabel laReceivingRateCaption;
    private javax.swing.JLabel laReceivingStatisticsCaption;
    private javax.swing.JLabel laSenderRate;
    private javax.swing.JLabel laSenderRateCaption;
    private javax.swing.JLabel laSenderTableCaption;
    private javax.swing.JLabel laSendingStatistics;
    private javax.swing.JLabel laSent;
    private javax.swing.JLabel laSentCaption;
    private javax.swing.JSplitPane mainSplitPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel paReceiverButtons;
    private javax.swing.JPanel paReceiverTableCaption;
    private javax.swing.JPanel paReceiverTableInner;
    private javax.swing.JPanel paReceiverTableOuter;
    private javax.swing.JPanel paReceivingStatistics;
    private javax.swing.JPanel paSenderButtons;
    private javax.swing.JPanel paSenderTableCaption;
    private javax.swing.JPanel paSenderTableInner;
    private javax.swing.JPanel paSenderTableOuter;
    private javax.swing.JPanel paSendingStatistics;
    private javax.swing.JSplitPane receiverSplitPane;
    private com.spam.mctool.view.main.receivertable.JReceiverTable receiverTable;
    private javax.swing.JSeparator receivingStatisticsSeparator;
    private javax.swing.JSplitPane senderSplitPane;
    private com.spam.mctool.view.main.sendertable.JSenderTable senderTable;
    private javax.swing.JLabel senderTableIcon;
    private javax.swing.JSeparator sendingStatisticsSeparator;
    private com.spam.mctool.view.main.StatusRenderer statusRenderer1;
    private com.spam.mctool.view.main.TwoColorRenderer twoColorRenderer1;
    // End of variables declaration//GEN-END:variables

    public MainFrameState getSessionState() {
        MainFrameState state = new MainFrameState();
        state.setXPosition(this.getX());
        state.setYPosition(this.getY());
        state.setHeight(this.getHeight());
        state.setWidth(this.getWidth());
        state.setWindowState(this.getExtendedState());
        return state;
    }

    public void setSessionState(MainFrameState state) {
        this.setLocation(state.getXPosition(), state.getYPosition());
        this.setSize(state.getWidth(), state.getHeight());
        this.setExtendedState(state.getWindowState());
    }

    private void test() {
        ReceiverTableModel tableModel = (ReceiverTableModel)receiverTable.getModel();
    }

    public void addSender(Map<String, String> senderMap, boolean activate) {
        this.view.addSender(senderMap, activate);
    }

    public void senderAdded(SenderAddedOrRemovedEvent e) {
        senderTable.senderAdded(e);
    }

    public void senderRemoved(SenderAddedOrRemovedEvent e) {
        senderTable.senderRemoved(e);
    }

    public void dataChanged(SenderDataChangedEvent e) {
        senderTable.dataChanged(e);
    }

    public void receiverGroupAdded(ReceiverAddedOrRemovedEvent e) {
        receiverTable.receiverGroupAdded(e);
    }

    public void receiverGroupRemoved(ReceiverAddedOrRemovedEvent e) {
        receiverTable.receiverGroupRemoved(e);
    }

    public void dataChanged(ReceiverDataChangedEvent e) {
        receiverTable.dataChanged(e);
    }

    

    

}
