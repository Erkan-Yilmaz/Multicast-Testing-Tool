/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelGraph.java
 *
 * Created on 18.04.2011, 08:34:12
 */

package com.spam.mctool.view.dialogs;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author Tobias Schoknecht (Tobias.Schoknecht@de.ibm.com)
 */
public class JPanelGraph extends javax.swing.JPanel {

    ArrayList<Integer> list = new ArrayList<Integer>();
    int maxPacketRate;

    /** Creates new form JPanelGraph */
    public JPanelGraph(int maxPacketRate) {
        initComponents();
        initArrayList();
        this.maxPacketRate = maxPacketRate;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initArrayList(){
        for(int i = 0; i < 10; i++){
            list.add(0);
        }
    }

    public void newVal(int val){
        list.add(val);
        list.remove(0);
        repaint();
    }

    @Override
    public void paintComponent(Graphics g){
        int width = getWidth();
        int height = getHeight();

        g.setColor(Color.BLACK);
        for(int i = 0; i <= height; i++){
            g.drawLine(0, i, width, i);
        }

        g.setColor(Color.GRAY);
        for(int i = 1; i < 10; i++){
            g.drawLine(i*width/10, 0, i*width/10, height);
        }
        for(int i = 1; i < 4; i++){
            g.drawLine(0, i*height/4, width, i*height/4);
        }
        
        g.setColor(Color.GREEN);
        for(int i = 1; i < 11; i++){

            g.drawLine((i-1)*width/10, list.get(i-1)/maxPacketRate*height, i*width/10, list.get(i)/maxPacketRate*height);

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
